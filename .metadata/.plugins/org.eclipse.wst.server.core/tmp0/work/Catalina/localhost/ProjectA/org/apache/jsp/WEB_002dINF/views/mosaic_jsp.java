/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.36
 * Generated at: 2016-08-29 14:23:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class mosaic_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1472040736968L));
    _jspx_dependants.put("jar:file:/C:/Users/Junji%20Kodama/Documents/ProjectA/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/MosaicProject/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!doctype html>\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\t<meta charset=\"utf-8\">\r\n");
      out.write("\t\t<link href=\"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\" rel=\"stylesheet\">\r\n");
      out.write("\t\t<link href=\"");
      if (_jspx_meth_c_005furl_005f1(_jspx_page_context))
        return;
      out.write("\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("\t\t<script src=\"");
      if (_jspx_meth_c_005furl_005f2(_jspx_page_context))
        return;
      out.write("\"></script>\r\n");
      out.write("\t\t<script src=\"");
      if (_jspx_meth_c_005furl_005f3(_jspx_page_context))
        return;
      out.write("\"></script>\r\n");
      out.write("\r\n");
      out.write("\t\t<script src=\"");
      if (_jspx_meth_c_005furl_005f4(_jspx_page_context))
        return;
      out.write("\"></script>\r\n");
      out.write("\r\n");
      out.write("\t\t<script>\r\n");
      out.write("\t\tvar image_exist = false;\r\n");
      out.write("\t\t$(function(){\r\n");
      out.write("\t\t\t//デフォルト設定\r\n");
      out.write("\t\t\tvar def_width=$(\"#mosaic_create_window\").width();\r\n");
      out.write("\t\t\tvar def_height=$(\"#mosaic_create_window\").height();\r\n");
      out.write("\t\t\t$(\"#height_input\").val(def_height);\r\n");
      out.write("\t\t\t$(\"#width_input\").val(def_width);\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t$(\".photo_size\").change(function(){\r\n");
      out.write("\t\t\t\t//スライダー側変動\r\n");
      out.write("\t\t\t\tvar val = $(this).val();\r\n");
      out.write("\t\t\t\tvar thisid = $(this).attr(\"id\");\r\n");
      out.write("\t\t\t\tvar persentage = Number(val);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar change_width = def_width * persentage / 100;\r\n");
      out.write("\t\t\t\tvar change_height = def_height * persentage /100;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tif(thisid == \"range_height\"){\r\n");
      out.write("\t\t\t\t\t$(\"#mosaic_create_window\").css(\"height\",change_height);\r\n");
      out.write("\t\t\t\t\t$(\"#height_input\").val(Math.round(change_height));\r\n");
      out.write("\t\t\t\t}else if(thisid == \"range_width\"){\r\n");
      out.write("\t\t\t\t\t$(\"#mosaic_create_window\").css(\"width\",change_width);\r\n");
      out.write("\t\t\t\t\t$(\"#width_input\").val(Math.round(change_width));\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t$(\"#mosaic_sqare_input\").val(val);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t\t\t$(\".photo_size_input\").change(function(){\r\n");
      out.write("\t\t\t\t//入力値変動\r\n");
      out.write("\t\t\t\tvar val = $(this).val();\r\n");
      out.write("\t\t\t\tvar thisid = $(this).attr(\"id\");\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar range_width = Math.round( 100 * val/def_width  );\r\n");
      out.write("\t\t\t\tvar range_height = Math.round( 100 * val / def_height);\r\n");
      out.write("\t\t\t\tvar range_mosaic = val;\r\n");
      out.write("\t\t\t\tvar this_max = $(this).attr(\"max\");\r\n");
      out.write("\t\t\t\tif(Number(val) > Number(this_max) ){\r\n");
      out.write("\t\t\t\t\tval = this_max;\r\n");
      out.write("\t\t\t\t\t$(this).val( this_max );\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tif(thisid == \"height_input\"){\r\n");
      out.write("\t\t\t\t\t$(\"#mosaic_create_window\").css(\"height\",val);\r\n");
      out.write("\t\t\t\t\t$(\"#range_height\").val(range_height);\r\n");
      out.write("\t\t\t\t}else if(thisid == \"width_input\"){\r\n");
      out.write("\t\t\t\t\t$(\"#mosaic_create_window\").css(\"width\",val);\r\n");
      out.write("\t\t\t\t\t$(\"#range_width\").val(range_width);\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t$(\"#mosaic_sqare\").val(val);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t//モザイクイメージ作成関数\t\t★★\r\n");
      out.write("\t\tfunction generate(){\r\n");
      out.write("\t\t\tvar send_date = \"aaa\";\t\t\t//コントローラ側に送る引数\r\n");
      out.write("\t\t\t//send_date = JSON.stringify(send_data);\r\n");
      out.write("\r\n");
      out.write("\t        $.ajax({\r\n");
      out.write("\t\t\t\ttype : \"POST\",\r\n");
      out.write("\t\t\t\turl : \"mosaic_generate\",//URL\r\n");
      out.write("\t\t\t\tdata: send_date,\r\n");
      out.write("\t\t\t\tcontentType: 'application/json; charset=UTF-8',\r\n");
      out.write("    \t\t\tmimeType: 'application/json',\r\n");
      out.write("\t\t\t\tdataType : \"text\",\r\n");
      out.write("\t\t\t\tcache : false,\r\n");
      out.write("\t\t\t\tsuccess : function(data, status, xhr) {\r\n");
      out.write("\t\t\t\t\talert(\"success:\"+data);\r\n");
      out.write("\t\t\t\t\timage_exist = true;\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\terror : function(XMLHttpRequest, status, errorThrown) {\r\n");
      out.write("\t\t\t\t\talert(\"データの取得に失敗しました\" + status);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t        });\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t//保存用関数\r\n");
      out.write("\t\tfunction save(){\r\n");
      out.write("\t\t\tif(!image_exist){\r\n");
      out.write("\t\t\t\talert(\"イメージが作成されていません。\");\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\tvar send_date = \"\";//コントローラ側に送る引数\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\ttype : \"POST\",\r\n");
      out.write("\t\t\t\t\turl : \"/mosaic_save\",//URL\r\n");
      out.write("\t\t\t\t\tdata: send_date,\r\n");
      out.write("\t\t\t\t\tcontentType: 'application/json; charset=UTF-8',\r\n");
      out.write("\t    \t\t\tmimeType: 'application/json',\r\n");
      out.write("\t\t\t\t\tdataType : \"json\",\r\n");
      out.write("\t\t\t\t\tcache : false,\r\n");
      out.write("\t\t\t\t\tsuccess : function(data, status, xhr) {\r\n");
      out.write("\t\t\t\t\t\talert(\"success:\"+data);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\terror : function(XMLHttpRequest, status, errorThrown) {\r\n");
      out.write("\t\t\t\t\t\talert(\"データの取得に失敗しました\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t        });\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t//リセット用関数\r\n");
      out.write("\t\tfunction clear_image(){\r\n");
      out.write("\t\t\t$(function(){\r\n");
      out.write("\t\t\t\t$(\"body\").scrollTop(0);\r\n");
      out.write("\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t/*★★hereadd*/\r\n");
      out.write("\r\n");
      out.write("\t\tfunction create_mosaic() {\r\n");
      out.write("\t\t\t//createされるたびにlistは初期化\r\n");
      out.write("\t\t\tbasemosaic_list = [];\r\n");
      out.write("\t\t\tvar selected_id =$(\"input[name='imageselect_radio']:checked\").attr(\"id\");\r\n");
      out.write("\t\t\tconsole.log(selected_id);\r\n");
      out.write("\t\t\tif(selected_id == null || selected_id == undefined || selected_id == \"\"){\r\n");
      out.write("\t\t\t\talert(\"画像が選択されていません。\");\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tselected_id += \"_img\";\r\n");
      out.write("\t\t\tvar imgurl = $(\"#\"+selected_id).attr(\"src\");\r\n");
      out.write("\t\t\tvar img = new Image();\r\n");
      out.write("\t\t\timg.src = imgurl;\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar canvas = document.getElementById(\"canvas\");\r\n");
      out.write("\t\t    var imgWidth = canvas.width = img.width;\r\n");
      out.write("\t\t    var imgHeight = canvas.height = img.height;\r\n");
      out.write("\t\t    var context = canvas.getContext(\"2d\");\r\n");
      out.write("\t\t    context.drawImage(img, 0, 0);\r\n");
      out.write("\t\t\tvar size = new Number($(\"#mosaic_sqare\").val());\r\n");
      out.write("\t\t\tconsole.log(imgWidth + \":\" + imgHeight );\r\n");
      out.write("\r\n");
      out.write("\t\t    var y_count = 0;\r\n");
      out.write("\t\t\tvar x_count = 0;\r\n");
      out.write("\t\t\tvar cell_name = \"\";\r\n");
      out.write("\r\n");
      out.write("\t\t\t//縦方向ループ\r\n");
      out.write("\t\t\tfor(var y = 0; y < imgHeight; y += size){\r\n");
      out.write("\t\t\t\ty_count += 1;\r\n");
      out.write("\t\t\t\t//条件式　(size <= imgHeight-y)が正だった場合はsize、そうでなければimgHeight-yを適用\r\n");
      out.write("\t\t\t\tvar h = (size <= imgHeight - y) ? size : imgHeight - y;\r\n");
      out.write("\r\n");
      out.write("\t\t        //横方向ループ\r\n");
      out.write("\t\t        for(var x = 0; x < imgWidth; x += size){\r\n");
      out.write("\t\t            var w = (size <= imgWidth - x) ? size : imgWidth - x;\r\n");
      out.write("\t\t\t\t\tx_count += 1;\r\n");
      out.write("\r\n");
      out.write("\t\t            var r = 0;\r\n");
      out.write("\t\t            var g = 0;\r\n");
      out.write("\t\t            var b = 0;\r\n");
      out.write("\r\n");
      out.write("\t\t            var data = context.getImageData(x,y,w,h).data;\r\n");
      out.write("\t\t            var dataLength = data.length;\r\n");
      out.write("\r\n");
      out.write("\t\t            for(var pixelIndex = 0; pixelIndex < dataLength; pixelIndex += 4) {\r\n");
      out.write("\t\t                r += data[pixelIndex];\r\n");
      out.write("\t\t                g += data[pixelIndex + 1];\r\n");
      out.write("\t\t                b += data[pixelIndex + 2];\r\n");
      out.write("\t\t            }\r\n");
      out.write("\r\n");
      out.write("\t\t            var pixelCount = dataLength / 4;\r\n");
      out.write("\r\n");
      out.write("\t\t            r = Math.floor(r / pixelCount);\r\n");
      out.write("\t\t            g = Math.floor(g / pixelCount);\r\n");
      out.write("\t\t            b = Math.floor(b / pixelCount);\r\n");
      out.write("\r\n");
      out.write("\t\t            cell_name = \"y\"+y_count + \"x\" + x_count;\r\n");
      out.write("\t\t\t\t\t//listに入れるオブジェクトを作成\r\n");
      out.write("\t\t\t\t\tvar cell = {\r\n");
      out.write("\t\t\t\t\t\t\tcell_name:cell_name,\r\n");
      out.write("\t\t\t\t\t\t\tx_address:x_count,\r\n");
      out.write("\t\t\t\t\t\t\ty_address:y_count,\r\n");
      out.write("\t\t\t\t\t\t\tRed:r,\r\n");
      out.write("\t\t\t\t\t\t\tGreen:g,\r\n");
      out.write("\t\t\t\t\t\t\tBlue:b\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t            basemosaic_list.push(cell);\r\n");
      out.write("\r\n");
      out.write("\t\t            context.clearRect(x,y,w,h);\r\n");
      out.write("\t\t            context.fillStyle = 'rgb(' + r + ',' + g + ',' + b + ')';\r\n");
      out.write("\t\t            context.fillRect(x,y,w,h);\r\n");
      out.write("\t\t       }\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t\tconsole.log(\"タイル数：\" + x_count * y_count);\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tfunction baselist_show(){\r\n");
      out.write("\t\t\tconsole.log(basemosaic_list);\r\n");
      out.write("\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t</script>\r\n");
      out.write("\t\t<style>\r\n");
      out.write("\t\t</style>\r\n");
      out.write("\t\t<title>MosaicAppli</title>\r\n");
      out.write("\t</head>\r\n");
      out.write("\r\n");
      out.write("\t<body style=\"background-color: #9e9e9e;\">\r\n");
      out.write("\t\t<div id = \"wrapper\" >\r\n");
      out.write("\t\t\t<div id=\"mosaic_header\">\r\n");
      out.write("\t\t\t\t<div class=\"mosaic_header_tab\">\r\n");
      out.write("\t\t\t\t<img class=\"mt8 ml10\" src=\"resources/images/mosaic_logo.png\" width=\"30px\">\r\n");
      out.write("\t\t\t\t<span>MosaicGenerator</span>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div id=\"mosaic_wrapper\">\r\n");
      out.write("\t\t\t\t<div id=\"flow1\">\r\n");
      out.write("\t\t\t\t\t<p class=\"mosaic_flow_title\"><span class=mosaic_title_sqare></span>完成イメージを選択</p>\r\n");
      out.write("\t\t\t\t\t<table class=\"mosaic_select_temple\">\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td class=\"td_check\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"imageselect_radio\" id=\"baseimage1\">\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<label class=\"mosaic_baseimages\" for=\"baseimage1\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<img src=\"resources/images/base-01.png\" id=\"baseimage1_img\">\r\n");
      out.write("\t\t\t\t\t\t\t\t</label>\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td class=\"td_check\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"imageselect_radio\" id=\"baseimage2\">\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<label class=\"mosaic_baseimages\" for=\"baseimage2\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<img src=\"resources/images/base-02.png\" id=\"baseimage2_img\">\r\n");
      out.write("\t\t\t\t\t\t\t\t</label>\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td class=\"td_check\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"imageselect_radio\" id=\"baseimage3\">\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<label class=\"mosaic_baseimages\" for=\"baseimage3\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<img src=\"resources/images/base-03.png\" id=\"baseimage3_img\">\r\n");
      out.write("\t\t\t\t\t\t\t\t</label>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td class=\"td_check\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"imageselect_radio\" id=\"baseimage4\">\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<label class=\"mosaic_baseimages\" for=\"baseimage4\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<img src=\"resources/images/base-04.png\" id=\"baseimage4_img\">\r\n");
      out.write("\t\t\t\t\t\t\t\t</label>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td class=\"td_check\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"imageselect_radio\" id=\"baseimage5\">\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<label for=\"baseimage5\" class=\"mosaic_baseimages\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<img src=\"resources/images/base-05.png\" id=\"baseimage5_img\">\r\n");
      out.write("\t\t\t\t\t\t\t\t</label>\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td class=\"td_check\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"imageselect_radio\" id=\"baseimage6\">\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<label class=\"mosaic_baseimages\" for=\"baseimage6\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<img src=\"resources/images/base-06.png\" id=\"baseimage1_img6\">\r\n");
      out.write("\t\t\t\t\t\t\t\t</label>\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td class=\"td_check\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"imageselect_radio\" id=\"baseimage7\">\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<label class=\"mosaic_baseimages\" for=\"baseimage7\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<img src=\"resources/images/base-07.png\" id=\"baseimage7_img\">\r\n");
      out.write("\t\t\t\t\t\t\t\t</label>\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<td class=\"td_check\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"imageselect_radio\" id=\"baseimage8\">\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<label class=\"mosaic_baseimages\" for=\"baseimage8\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<span class=\"baseimage_none\"><p style=\"padding:10px;\">オリジナル画像を<br>フォルダから選択</p></span>\r\n");
      out.write("\t\t\t\t\t\t\t\t</label>\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div id=\"flow2\" class=\"mt20\">\r\n");
      out.write("\t\t\t\t\t<p class=\"mosaic_flow_title\"><span class=mosaic_title_sqare></span>素材選択</p>\r\n");
      out.write("\t\t\t\t\t<input type=\"file\" name=\"image_file[]\" multiple=\"multiple\" accept=\"image/*\" id=\"upload_images\">\r\n");
      out.write("\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t<div id=\"mosaic_drop_material\" ><font color=\"gray\">このエリアにファイルをドロップしてください。</font></div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"mt20\">▼選択中の素材\r\n");
      out.write("\t\t\t\t\t\t<div id=\"mosaic_drop_image_show\" ></div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div id=\"flow3\"  class=\"mt20\">\r\n");
      out.write("\t\t\t\t\t<p class=\"mosaic_flow_title\"><span class=mosaic_title_sqare></span>カラーパターン選択</p>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div id=\"flow4\"  class=\"mt20\">\r\n");
      out.write("\t\t\t\t\t<p class=\"mosaic_flow_title\"><span class=mosaic_title_sqare></span>仕上がりサイズとモザイク密度指定</p>\r\n");
      out.write("\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t縦:\r\n");
      out.write("\t\t\t\t\t\t<input type=\"range\" name=\"range_height\" id=\"range_height\" min=10 max=100 class=\"photo_size\" value=\"100\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"number\" min=0 max=510 id=\"height_input\" class=\"photo_size_input\"> px\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t横:\r\n");
      out.write("\t\t\t\t\t\t<input type=\"range\" name=\"range_width\" id=\"range_width\" min=10 max=100  class=\"photo_size\" value=\"100\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"number\" min=10 max=800 id=\"width_input\" class=\"photo_size_input\"> px\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\tモザイクサイズ:\r\n");
      out.write("\t\t\t\t\t\t<input type=\"range\" name=\"mosaic_square\" id=\"mosaic_sqare\" min=5 max=100  class=\"photo_size\" value=\"10\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"number\" min=5 max=100 id=\"mosaic_sqare_input\" class=\"photo_size_input\" value=10> px四方\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div id=\"flow5\">\r\n");
      out.write("\t\t\t\t\t<div class=\"mt10\" style=\"height:80px;margin-left: 345px;\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"btndiv_1\" onclick=\"generate()\">作成</div>\r\n");
      out.write("<!-- \t\t\t\t\t\t<div class=\"btndiv_1\" onclick=\"generate_test()\">テスト</div>-->\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div id=\"mosaic_create_window\"></div>\r\n");
      out.write("\t\t\t\t\t<div class=\"mt10 fr\" style=\"height:80px; \">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"btndiv_1\" onclick=\"save()\">保存</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"btndiv_1\" onclick=\"clear_image();\">やり直し</div>\r\n");
      out.write("\t\t\t\t\t\t<img src=\"resources/images/facebooklogo.png\" alt=\"facebook\" style=\"width:30px\" onclick=\"alert('FaceBookで共有する');\">\r\n");
      out.write("\t\t\t\t\t\t<img src=\"resources/images/twitter.png\" alt=\"twitter\"style=\"width:30px\" onclick=\"alert('Twitterで共有する');\">\r\n");
      out.write("\t\t\t\t\t\t<img src=\"resources/images/instagram.png\" alt=\"instagram\"style=\"width:30px\" onclick=\"alert('Instagramで共有する');\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"clr\"></div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<!-- \t▼テスト検証スペース▼  -->\r\n");
      out.write("\t\t<div id=\"test_space\" style=\"background-color:white\">\r\n");
      out.write("\t\t<h1>HTML5のcanvasでモザイク処理</h1>\r\n");
      out.write("\t\t<form>\r\n");
      out.write("\t\tモザイクのサイズとモザイクのベース画像はページ上部で選択\r\n");
      out.write("<!--  \t\t<select name=\"mosaicSize\" id=\"mosaicSize\">\r\n");
      out.write("\t\t  <option value=\"5\">5 x 5</option>\r\n");
      out.write("\t\t  <option value=\"10\">10 x 10</option>\r\n");
      out.write("\t\t  <option value=\"30\">30 x 30</option>\r\n");
      out.write("\t\t  <option value=\"50\">50 x 50</option>\r\n");
      out.write("\t\t</select>\r\n");
      out.write(" -->\t\t<input type=\"button\" value=\"実行\" onclick=\"create_mosaic()\"/>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t\t<canvas id=\"canvas\">\r\n");
      out.write("\t\tcanvasに対応したブラウザでなければ動作しません！\r\n");
      out.write("\t\t</canvas>\r\n");
      out.write("\t\t<p onclick=\"baselist_show()\" style=\"display:block;background:orange;color:white;width:150px\">リスト確認</p>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005furl_005f0.setParent(null);
    // /WEB-INF/views/mosaic.jsp(12,14) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005furl_005f0.setValue("/resources/css/common.css");
    int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
    if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f1 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    _jspx_th_c_005furl_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005furl_005f1.setParent(null);
    // /WEB-INF/views/mosaic.jsp(13,14) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005furl_005f1.setValue("/resources/css/jquery-ui.css");
    int _jspx_eval_c_005furl_005f1 = _jspx_th_c_005furl_005f1.doStartTag();
    if (_jspx_th_c_005furl_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f1);
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f2 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    _jspx_th_c_005furl_005f2.setPageContext(_jspx_page_context);
    _jspx_th_c_005furl_005f2.setParent(null);
    // /WEB-INF/views/mosaic.jsp(15,15) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005furl_005f2.setValue("http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js");
    int _jspx_eval_c_005furl_005f2 = _jspx_th_c_005furl_005f2.doStartTag();
    if (_jspx_th_c_005furl_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f2);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f2);
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f3 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    _jspx_th_c_005furl_005f3.setPageContext(_jspx_page_context);
    _jspx_th_c_005furl_005f3.setParent(null);
    // /WEB-INF/views/mosaic.jsp(16,15) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005furl_005f3.setValue("http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.19/jquery-ui.min.js");
    int _jspx_eval_c_005furl_005f3 = _jspx_th_c_005furl_005f3.doStartTag();
    if (_jspx_th_c_005furl_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f3);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f3);
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f4(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f4 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    _jspx_th_c_005furl_005f4.setPageContext(_jspx_page_context);
    _jspx_th_c_005furl_005f4.setParent(null);
    // /WEB-INF/views/mosaic.jsp(18,15) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005furl_005f4.setValue("/resources/js/common.js");
    int _jspx_eval_c_005furl_005f4 = _jspx_th_c_005furl_005f4.doStartTag();
    if (_jspx_th_c_005furl_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f4);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f4);
    return false;
  }
}
